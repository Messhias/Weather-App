{"version":3,"sources":["utils/Env.js","stores/Dispatcher.js","constants/AppConstants.js","stores/AppStore.js","utils/Functions.js","utils/Request.js","components/Login/Form.js","request/User/Login.js","pages/User/Logout.js","request/User/Logout.js","pages/User/AllPages.js","pages/User/Login.js","pages/User/Home.js","request/User/Home.js","utils/DatePrototype.js","pages/Location/Info.js","request/Weather/Info.js","components/AutoComplete.js","request/Locations/Add.js","pages/AllPages.js","pages/NotFound.js","pages/Location/AllPages.js","pages/Location/Add.js","request/Countries/List.js","utils/Routes.js","App.js","serviceWorker.js","index.js"],"names":["server","dispatcher","Dispatcher","AppConstants","SET_USER","SET_PAGE","store","AppStore","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","user","page","action","data","emit","change","actions","Constants","type","setUser","setPage","EventEmitter","register","handleActions","bind","getStoredUser","JSON","parse","localStorage","getItem","eraseStorageUser","removeItem","options","baseURL","withCredentials","headers","Content-Type","x-access-token","toString","concat","getUser","token","instance","Axios","create","parseParams","params","keys","map","key","encodeURIComponent","join","Form","props","state","email","password","event","_this2","preventDefault","_this$state","arguments","length","undefined","Request","post","Login","then","response","_response$status","status","_response$data","_data$auth","auth","setItem","stringify","storageUser","history","push","catch","error","console","setState","defineProperty","target","id","value","_this3","react_default","a","createElement","className","onSubmit","_onSubmit","htmlFor","onChange","_inputOnChange","name","React","Component","withRouter","Logout","get","setInterval","window","location","href","AllPages","Login_Form","Home","countriesList","myLocations","_this$state$myLocatio","locations","_renderMyCurrentLocations","react_router_dom","to","index_es","icon","faPlus","view","city","country","Date","prototype","format","e","t","n","replaceChars","r","i","charAt","shortMonths","longMonths","shortDays","longDays","d","getDate","D","getDay","j","l","N","S","w","z","getFullYear","Math","ceil","W","F","getMonth","m","M","L","o","valueOf","setDate","Y","y","substr","getHours","A","B","floor","getUTCHours","getUTCMinutes","getUTCSeconds","g","G","h","H","getMinutes","s","getSeconds","u","getMilliseconds","I","getTimezoneOffset","O","abs","P","T","setMonth","toTimeString","replace","Z","c","U","getTime","Info","match","current_time","sunrise","sunset","weather_description","temperature","_this$state$city","_this$state$country","Weather","_data$info","info","_treatIconData","_setCurrentTime","_weatherDescription","_setTemperatureInfo","_setSunStages","sys","number","main","temp","parseInt","weather","description","dt","code","weatherIcon","_this$state2","_this$state2$icon","_this$state2$city","_this$state2$weather_","_this$state2$current_","DatePrototype","_this$state2$sunrise","_this$state2$sunset","_this$state2$temperat","faChevronLeft","AutoComplete","suggestion","selected","userInput","currentTarget","suggestions","filteredSuggestions","filter","capital","toLowerCase","indexOf","slice","addCity","index","toLocaleLowerCase","onClick","substring","_highLightText","_this4","_this$state$value","_this$state$suggestio","faChevronDown","_renderSuggestionsList","defaultProps","pages_AllPages","NotFound","User","Location","Add","countries","assertThisInitialized","_fetchCountries","AutoComplete_AutoComplete","_this$state$selected","AddLocation","_response$data2","_this$state$countries","_this$state$selected2","_submitForm","_renderSelectBox","_renderSaveButton","Routes","basename","ref","react_router","paths","/","Pages","/login","/logout","/home","/info/:city/:country","/add-location","path","exact","component","makeRoutes","App","Routes_Routes","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e402221.chunk.js","sourcesContent":["const server = \"https://immense-reef-23498.herokuapp.com/\";\n\n/**\n * Returns the dev ser constant.\n *\n * @returns {string}\n */\nexport function getServer() {\n    return server;\n}","import { Dispatcher } from \"flux\";\n\nconst dispatcher = new Dispatcher();\n\nexport default dispatcher;\n","const SET_USER = 'SET_USER';\nconst SET_PAGE = 'SET_PAGE';\n\nexport default {\n    SET_USER,\n    SET_PAGE,\n};","import { EventEmitter } from \"events\";\n\nimport dispatcher from \"./Dispatcher\";\nimport Constants from '../constants/AppConstants';\n\n/**\n * Default class signature.\n *\n * This class it'll represents all the state of the application with their objects\n */\nclass AppStore extends EventEmitter {\n    /**\n     * Default class constructor.\n     *\n     * Init the main class attributes.\n     */\n    constructor() {\n        super();\n        this.user = null;\n        this.page = null;\n    }\n\n    /**\n     * Main emmit change.\n     *\n     * @param action\n     * @param data\n     */\n    change(action, data) {\n        this.emit('change');\n        this.emit('change_' + action, data);\n    }\n\n    /**\n     * Set new user data.\n     *\n     * @param user\n     */\n    setUser(user) {\n        this.user = user;\n        this.change('user');\n    }\n\n    /**\n     * Retrieving the user data.\n     *\n     * @return {null}\n     */\n    getUser() {\n        return this.user;\n    }\n\n    /**\n     * Setting the page into the state application.\n     *\n     * @param page\n     */\n    setPage(page) {\n        this.page = page;\n        this.change('page');\n    }\n\n    /**\n     * Getting the previously state page.\n     *\n     * @return {null}\n     */\n    getPage() {\n        return this.page;\n    }\n\n    /**\n     * Handling all the actions into the state management.\n     *\n     * @param action\n     * @return {*}\n     */\n    handleActions(action) {\n        const { actions } = Constants;\n        switch (action.type) {\n            case actions.SET_USER:\n                this.setUser(action.user);\n            break;\n\n            case actions.SET_PAGE:\n                this.setPage(action.page);\n                break;\n\n            default: return action;\n        }\n    }\n}\n\nconst store = new AppStore();\n\ndispatcher.register(store.handleActions.bind(store));\n\nexport default store;\n","import AppStore from \"../stores/AppStore\";\n\n/**\n * Store the user in local storage browser data.\n *\n * @param data\n */\nexport function storageUser(data = []) {\n    localStorage.setItem(\"logged\", JSON.stringify(data));\n}\n\n/**\n * Function to return the stored user in local storage.\n *\n * @returns {any | Array}\n */\nexport function getStoredUser() {\n    return JSON.parse(localStorage.getItem(\"logged\")) || false;\n}\n\n/**\n * Returns true if the user exists in the local storage.\n *\n * @returns {boolean}\n */\nexport function userExistsInStorage() {\n    return JSON.parse(localStorage.getItem(\"logged\")) != null ? JSON.parse(localStorage.getItem(\"logged\")).token !== \"\" : false;\n}\n\n/**\n * Remove the logged user from storage.\n */\nexport function eraseStorageUser() {\n    localStorage.removeItem(\"logged\");\n}\n\n/**\n * Clearing the storage.\n */\nexport function clearStorage() {\n    localStorage.clear();\n}\n\n/**\n * @returns {token}\n */\nexport function getToken() {\n    return AppStore.getUser() ? AppStore.getUser().token : getStoredUser().token;\n}\n\nexport function getTemperature(number) {\n    return parseInt(number) / 10;\n}","import Axios from 'axios';\n\n// eslint-disable-next-line\nimport { getServer } from './Env';\nimport {getToken} from \"./Functions\";\n\n/**\n * Options for request.\n *\n * @INFO -> if you need change the default requests handlers be auth just switch the param\n * withCredentials to true.\n *\n * @INFO -> if you want to use your dev ser in baseURL just change the getDevServer() and it's done,\n * @INFO -> if you want to change the endpoint of your dev ser go to Env.js file and change the const dev_server to your\n * respective URL endpoint.\n *\n * @type {{baseURL: (never|*), withCredentials: boolean, timeout: number}}\n */\nconst options = {\n    baseURL: getServer(),\n    withCredentials: false,\n    // timeout: 3000,\n    headers: {\n        'Content-Type': 'application/json',\n        \"x-access-token\": {\n            toString() {\n                return `${getToken()}`\n            }\n        }\n    },\n};\n\nconst instance = Axios.create(options);\n\ninstance.parseParams = (params) => {\n    return Object.keys(params).map(function(key) {\n        return [key, params[key]].map(encodeURIComponent).join(\"=\");\n    }).join(\"&\");\n};\n\n\nexport default instance;\n","import React from 'react';\n\n// importing the routes.\nimport Login from '../../request/User/Login';\n\n// getting the app store application.\nimport AppStore from '../../stores/AppStore';\n\nimport { withRouter } from \"react-router-dom\";\nimport {eraseStorageUser, storageUser} from \"../../utils/Functions\";\n\n\n/**\n * Default class signature.\n *\n * This class is responsible to control the form component.\n */\nclass Form extends React.Component {\n    /**\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n        };\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    _onSubmit(event) {\n        event.preventDefault();\n        const {\n            email,\n            password\n        } = this.state;\n\n        if (email && password) {\n            const data = { email,  password };\n            Login(data)\n                .then(response => {\n                    const { status = 500 } = response;\n\n                    if (status === 200) {\n                        const { data = null } = response;\n                        if (data) {\n                            const { auth = false } = data;\n\n                            if (auth) {\n                                eraseStorageUser();\n                                storageUser(data);\n                                AppStore.setUser(data);\n\n                                // uncomment the lines bellow if you want to add the user data to the localStorage.\n                                AppStore.setPage(\"/home\");\n                                this.props.history.push('home');\n                            }\n                        }\n                    } else {\n                        eraseStorageUser();\n                        AppStore.setUser(null);\n                        this.props.history.push(\"/\");\n                    }\n                })\n                .catch(error => console.error(error));\n        }\n    }\n\n    /**\n     * @param event\n     * @private\n     */\n    _inputOnChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    /**\n     * @return {*}\n     */\n    render() {\n        return (\n            <div\n                className={'login-container'}\n            >\n                <form\n                    onSubmit={event => this._onSubmit(event)}\n                >\n                    <div>\n                        <label htmlFor={'username'}>\n                            username\n                        </label>\n                        <input\n                            type={'text'}\n                            onChange={event => this._inputOnChange(event)}\n                            id={'email'}\n                            name={'name'}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor={'password'}>\n                            password\n                        </label>\n                        <input\n                            type={'password'}\n                            onChange={event => this._inputOnChange(event)}\n                            id={'password'}\n                            name={'password'}\n                        />\n                    </div>\n                    <div>\n                        <button>\n                            LOGIN\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Form);","// getting the request object.\nimport Request from '../../utils/Request';\n\n/**\n * Send the data to api.\n *\n * @param data\n * @return {*}\n */\nexport default (data = {}) => Request.post(`login`, data);","import React from 'react';\nimport GetLogout from \"../../request/User/Logout\";\n\n\nexport default class Logout extends React.Component {\n\n    componentWillMount() {\n        GetLogout()\n            .then(response => {\n                const { status = 500 } = response;\n                if (status === 200)\n                    setInterval(window.location.href = \"/\", 8000);\n            })\n            .catch(error => console.error(error));\n    }\n\n    render() {\n        return (\n            <div>\n                <p>\n                    Logout...\n                </p>\n            </div>\n        )\n    }\n}","import Request from '../../utils/Request';\n\n/**\n * Send a request to logout endpoint.\n *\n * @return {Promise<AxiosResponse<T>>}\n */\nexport default () => Request.get(`logout`);","import Login from './Login';\nimport Logout from './Logout';\nimport Home from './Home';\n\n/**\n * Exporting as default all the pages into single contained component.\n *\n * @return object\n */\nexport default {\n    Login,\n    Logout,\n    Home,\n}","import React from 'react';\n\n// importing the form login\nimport Form from \"../../components/Login/Form\";\n\nexport default () => (\n    <Form />\n)","import React from 'react';\n\n// font awesome icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\n\n// importing the requests into the api.\nimport HomeRequest from '../../request/User/Home';\n\n// nav link to routes import\nimport {NavLink} from \"react-router-dom\";\nimport {getStoredUser} from \"../../utils/Functions\";\n\n/**\n * Default class signature.\n *\n * Home page class, that responsible to show my cities list.\n */\nexport default class Home extends React.Component {\n    /**\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            countriesList: [],\n            myLocations: [],\n        };\n    }\n\n    /**\n     * Default react life cycle function.\n     */\n    componentWillMount() {\n        if (!getStoredUser()) this.props.history.push(\"/\");\n        HomeRequest()\n            .then(response => {\n                const { status = 500 } = response;\n                if (status === 200) {\n                    const { data = [] } = response;\n                    this.setState({ myLocations: data });\n                }\n            })\n            .catch(error => {\n                if (!error.response.data.auth) {\n                    this.props.history.push(\"/\");\n                }\n            });\n    }\n\n    /**\n     * @param myLocations\n     * @return {Array}\n     * @private\n     */\n    static _renderMyCurrentLocations(myLocations = []) {\n        const view = [];\n        if (myLocations.length > 0) {\n            view.push(myLocations.map(location =>\n                <p\n                    key={`location-link-${location.city}-${location.country}`}\n                >\n                    <NavLink\n                        to={`/info/${location.city}/${location.country}`}\n                    >\n                        {location.city}\n                    </NavLink>\n                </p>\n            ));\n        }\n\n        return view;\n    }\n\n    render() {\n        const { myLocations = [] } = this.state,\n            locations = Home._renderMyCurrentLocations(myLocations);\n\n        return (\n            <div\n                className={'home-page-container'}\n            >\n                {locations}\n                <p>\n                    <NavLink\n                        to={`/add-location`}\n                    >\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </NavLink>\n                </p>\n            </div>\n        );\n    }\n}","import Request from '../../utils/Request';\n\nexport default () => Request.get(`home`);","export default Date.prototype.format=function(e){var t=\"\";var n=Date.replaceChars;for(var r=0;r<e.length;r++){var i=e.charAt(r);if(r-1>=0&&e.charAt(r-1)==\"\\\\\"){t+=i}else if(n[i]){t+=n[i].call(this)}else if(i!=\"\\\\\"){t+=i}}return t};Date.replaceChars={shortMonths:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],longMonths:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],shortDays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],longDays:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],d:function(){return(this.getDate()<10?\"0\":\"\")+this.getDate()},D:function(){return Date.replaceChars.shortDays[this.getDay()]},j:function(){return this.getDate()},l:function(){return Date.replaceChars.longDays[this.getDay()]},N:function(){return this.getDay()+1},S:function(){return this.getDate()%10==1&&this.getDate()!=11?\"st\":this.getDate()%10==2&&this.getDate()!=12?\"nd\":this.getDate()%10==3&&this.getDate()!=13?\"rd\":\"th\"},w:function(){return this.getDay()},z:function(){var e=new Date(this.getFullYear(),0,1);return Math.ceil((this-e)/864e5)},W:function(){var e=new Date(this.getFullYear(),0,1);return Math.ceil(((this-e)/864e5+e.getDay()+1)/7)},F:function(){return Date.replaceChars.longMonths[this.getMonth()]},m:function(){return(this.getMonth()<9?\"0\":\"\")+(this.getMonth()+1)},M:function(){return Date.replaceChars.shortMonths[this.getMonth()]},n:function(){return this.getMonth()+1},t:function(){var e=new Date;return(new Date(e.getFullYear(),e.getMonth(),0)).getDate()},L:function(){var e=this.getFullYear();return e%400==0||e%100!=0&&e%4==0},o:function(){var e=new Date(this.valueOf());e.setDate(e.getDate()-(this.getDay()+6)%7+3);return e.getFullYear()},Y:function(){return this.getFullYear()},y:function(){return(\"\"+this.getFullYear()).substr(2)},a:function(){return this.getHours()<12?\"am\":\"pm\"},A:function(){return this.getHours()<12?\"AM\":\"PM\"},B:function(){return Math.floor(((this.getUTCHours()+1)%24+this.getUTCMinutes()/60+this.getUTCSeconds()/3600)*1e3/24)},g:function(){return this.getHours()%12||12},G:function(){return this.getHours()},h:function(){return((this.getHours()%12||12)<10?\"0\":\"\")+(this.getHours()%12||12)},H:function(){return(this.getHours()<10?\"0\":\"\")+this.getHours()},i:function(){return(this.getMinutes()<10?\"0\":\"\")+this.getMinutes()},s:function(){return(this.getSeconds()<10?\"0\":\"\")+this.getSeconds()},u:function(){var e=this.getMilliseconds();return(e<10?\"00\":e<100?\"0\":\"\")+e},e:function(){return\"Not Yet Supported\"},I:function(){var e=null;for(var t=0;t<12;++t){var n=new Date(this.getFullYear(),t,1);var r=n.getTimezoneOffset();if(e===null)e=r;else if(r<e){e=r;break}else if(r>e)break}return this.getTimezoneOffset()==e|0},O:function(){return(-this.getTimezoneOffset()<0?\"-\":\"+\")+(Math.abs(this.getTimezoneOffset()/60)<10?\"0\":\"\")+Math.abs(this.getTimezoneOffset()/60)+\"00\"},P:function(){return(-this.getTimezoneOffset()<0?\"-\":\"+\")+(Math.abs(this.getTimezoneOffset()/60)<10?\"0\":\"\")+Math.abs(this.getTimezoneOffset()/60)+\":00\"},T:function(){var e=this.getMonth();this.setMonth(0);var t=this.toTimeString().replace(/^.+ \\(?([^\\)]+)\\)?$/,\"$1\");this.setMonth(e);return t},Z:function(){return-this.getTimezoneOffset()*60},c:function(){return this.format(\"Y-m-d\\\\TH:i:sP\")},r:function(){return this.toString()},U:function(){return this.getTime()/1e3}}\n","import React from 'react';\n\n// importing requests\nimport Weather from '../../request/Weather/Info';\nimport { getTemperature } from \"../../utils/Functions\";\nimport {NavLink} from \"react-router-dom\";\n\n// getting the icons map list\nimport weatherIcon from '../../utils/icons';\n\n// font awesome icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronLeft} from \"@fortawesome/free-solid-svg-icons/faChevronLeft\";\nimport DatePrototype from \"../../utils/DatePrototype\";\n\n/**\n * Class responsible to track the icons data.\n */\nexport default class Info extends React.Component {\n    /**\n     * Default class constructor.\n     *\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            city: props.match.params && props.match.params.city ? props.match.params.city : false,\n            country: props.match.params && props.match.params.country ? props.match.params.country : false,\n            current_time: new Date(),\n            sunrise: new Date(),\n            sunset: new Date(),\n            icon: \"\",\n            weather_description: \"\",\n            temperature: 0,\n        };\n    }\n\n    /**\n     * Default react life cycle function.\n     */\n    componentWillMount() {\n        const { city = false, country = false } = this.state;\n\n        Weather({city: city, country: country})\n            .then(response => {\n                const { status = 500 } = response;\n                if (status === 200) {\n                    const { data = [] } = response,\n                        { info = [] } = data;\n                    this._treatIconData(info);\n                    this._setCurrentTime(info);\n                    this._weatherDescription(info);\n                    this._setTemperatureInfo(info);\n                    this._setSunStages(info);\n                }\n            })\n            .catch(error => {\n                console.error(error);\n                this.props.history.push('/');\n            });\n    }\n\n    /**\n     * Set up sunrise and sunset.\n     *\n     * @param data\n     * @private\n     */\n    _setSunStages(data = []) {\n        if (data.sys) {\n            const sunrise = new Date(data.sys.sunrise);\n            const sunset = new Date(data.sys.sunset);\n\n            this.setState({ sunset, sunrise });\n        }\n    }\n\n    /**\n     * @param data\n     * @private\n     */\n    _setTemperatureInfo(data = []) {\n        if (data.main) {\n            const temperature = getTemperature(data.main.temp);\n\n            this.setState( { temperature });\n        }\n    }\n\n    /**\n     * Setting the weather description.\n     *\n     * @param data\n     * @private\n     */\n    _weatherDescription(data = []) {\n        if (data.weather.length > 0) {\n            this.setState({ weather_description: data.weather[0].description });\n        }\n    }\n\n    /**\n     * Treat and set current time.\n     *\n     * @param data\n     * @private\n     */\n    _setCurrentTime(data = []) {\n        if (data.dt) {\n            let current_time = new Date(data.dt);\n            this.setState({ current_time });\n        }\n    }\n\n    /**\n     * Tracking icon data.\n     *\n     * @param data\n     * @private\n     */\n    _treatIconData(data = []) {\n        if (data.weather.length > 0 ) {\n            const prefix = 'wi wi-';\n            const code = data.weather[0].id;\n            let icon = weatherIcon[code].icon;\n\n            // If we are not in the ranges mentioned above, add a day/night prefix.\n            if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n                icon = 'day-' + icon;\n            }\n\n            // Finally tack on the prefix.\n            icon = prefix + icon;\n\n            this.setState({ icon });\n        }\n    }\n\n    /**\n     * Default render function.\n     *\n     * @return {*}\n     */\n    render() {\n        const {\n            icon = \"\",\n            city = \"\",\n            weather_description = \"\",\n            current_time = new DatePrototype(),\n            sunrise = new DatePrototype(),\n            sunset = new DatePrototype(),\n            temperature = 0,\n        } = this.state;\n\n        return (\n            <div\n                className={'weather-info'}\n            >\n                <div\n                    className={'back-button'}\n                >\n                    <NavLink\n                        to={\"/home\"}\n                    >\n                        <FontAwesomeIcon icon={faChevronLeft} />\n                    </NavLink>\n                </div>\n                <div className={'row'}>\n                    <div className={'column description-row'}>\n                        <i className={`weather-icon ${icon}`} />\n                        <div className={'weather-description'}>\n                            {weather_description}\n                        </div>\n                    </div>\n                    <div className={'column middle-row'}>\n                        {current_time.getHours()}\n                        <br/>\n                        {current_time.getMinutes()}\n                        <br/>\n                        <div className={'blue-highlight'}>\n                            {city}\n                        </div>\n                    </div>\n                    <div className={'column sun-stages'}>\n                        <div className={'row'}>\n                            <div className={'weather-sys-info'}>\n                                <i className={\"wi wi-thermometer\"}/>\n                                {\" \"}{temperature}˚C\n                            </div>\n                        </div>\n                        <div className={'row'}>\n                            <div className={'weather-sys-info'}>\n                                <i className={\"wi wi-sunrise\"}/>\n                                {`${sunrise.format(\"H:m\")}`}\n                            </div>\n                        </div>\n                        <div className={'row'}>\n                            <div className={'weather-sys-info'}>\n                                <i className={\"wi wi-sunset\"}/>{\" \"}\n                                {`${sunset.format(\"H:m\")}`}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import Request from '../../utils/Request';\n\n/**\n * Send the request to the backend.\n *\n * @param data\n * @return {Promise<AxiosResponse<T>>}\n */\nexport default (data = {}) => {\n    return Request.post(`weather/`, data);\n}","import React from 'react';\n\n// importing the prop types\nimport PropTypes from \"prop-types\";\n\n// font awesome icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronDown} from \"@fortawesome/free-solid-svg-icons\";\n\n/**\n * Auto complete component class.\n */\nexport default class AutoComplete extends React.Component {\n    /**\n     * Default class constructor.\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            suggestion: [],\n            value: \"\",\n            selected: [],\n        }\n    }\n\n    /**\n     * Set upt the propTypes to strict array prop types.\n     * @type {{suggestions: *}}\n     */\n    static propTypes = {\n        suggestions: PropTypes.instanceOf(Array)\n    };\n\n    /**\n     * Setting up the default prop types.\n     * @type {{suggestions: Array}}\n     */\n    static defaultProps = {\n        suggestions: []\n    };\n\n    /**\n     * Input text on change event.\n     * @param event\n     */\n    onChange(event) {\n        const userInput = event.currentTarget.value;\n        const { suggestions } = this.props;\n        this.setState({ value: userInput });\n\n        if (userInput !== \"\")  {\n            // Filter our suggestions that don't contain the user's input\n            const filteredSuggestions = suggestions.filter(\n                suggestion =>\n                    suggestion.capital.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n            );\n\n            this.setState({ suggestions: filteredSuggestions.slice(0, 8) });\n        } else this.setState({ suggestions: [] });\n    }\n\n    /**\n     * Prepare data to add new city.\n     * @param suggestions\n     */\n    addCity(suggestions = []) {\n        this.setState({ suggestions: [], value: \"\" });\n        this.props.addCity(suggestions);\n    }\n\n    /**\n     * Highlight the characters.\n     *\n     * @param suggestion\n     * @param value\n     * @return {*}\n     * @private\n     */\n    _highLightText(suggestion = [], value = \"\") {\n        let index = suggestion.capital.toLowerCase().indexOf(value.toLocaleLowerCase());\n\n        if (index !== 0) {\n            return (\n                <li\n                    key={suggestion.id}\n                    onClick={() => this.addCity(suggestion)}\n                >\n                    {suggestion.capital.substring(0,index)}<span className='highlight'>{suggestion.capital.substring(index,index+value.length)}</span>{suggestion.capital.substring(index + value.length)}\n                </li>\n            );\n        } else {\n            return (\n                <li\n                    key={suggestion.id}\n                    onClick={() => this.addCity(suggestion)}\n                >\n                    {suggestion.capital}\n                </li>\n            );\n        }\n    }\n\n    /**\n     * Container for suggestions list.\n     * @param suggestions\n     * @param value\n     * @return {*}\n     * @private\n     */\n    _renderSuggestionsList(suggestions = [], value = \"\") {\n        return (\n            <div\n                className={'suggestions-list'}\n            >\n                <ul>\n                    {suggestions.map(s =>\n                        this._highLightText(s, value)\n                    )}\n                </ul>\n            </div>\n        )\n    }\n\n    /**\n     * Default render function.\n     * @return {*}\n     */\n    render() {\n        const {\n            value = \"\",\n            suggestions = [],\n        } = this.state;\n\n        return (\n            <div\n                className={\"add-page-input\"}\n            >\n                <div className={'arrow-right'}>\n                    <FontAwesomeIcon icon={faChevronDown} />\n                </div>\n                <input\n                    type={'text'}\n                    value={value}\n                    onChange={(e) => this.onChange(e)}\n                />\n                {this._renderSuggestionsList(suggestions, value)}\n            </div>\n        );\n    }\n}","import Request from '../../utils/Request';\n\n/**\n * Add new location for the user.\n *\n * @param data\n * @return {Promise<AxiosResponse<T>>}\n */\nexport default (data = {} ) => Request.post(`location/add`, { data });","import NotFound from './NotFound';\nimport User from './User/AllPages';\nimport Location from './Location/AllPages';\n\n/**\n * Exporting as default all the pages into single contained component.\n *\n * @return object\n */\nexport default {\n    NotFound,\n    User,\n    Location,\n}","import React from 'react';\n\nimport {NavLink} from \"react-router-dom\";\n\n/**\n * Stateless component for page not found.\n *\n * @return {*}\n */\nexport default () => (\n    <div\n        className={'page-not-found'}\n    >\n        <div\n        className={'back-button'}\n        >\n            <NavLink\n                to={\"/home\"}\n            >\n                {'<'}\n            </NavLink>\n        </div>\n        <p>\n            Page not found.\n        </p>\n    </div>\n)","import Info from './Info';\nimport Add from './Add';\n\nexport default {\n    Info,\n    Add,\n}","import React from 'react';\n\n// importing react router components.\nimport {NavLink} from \"react-router-dom\";\n\n// importing the requests.\nimport CountriesList from '../../request/Countries/List';\n\n// importing components.\nimport AutoComplete from '../../components/AutoComplete';\n\n// font awesome icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faChevronLeft} from \"@fortawesome/free-solid-svg-icons/faChevronLeft\";\n\n// importing the requests\nimport AddLocation from '../../request/Locations/Add';\n\n/**\n * Default class signature.\n *\n * This class is responsible to add new user city.\n */\nexport default class Add extends React.Component {\n    /**\n     * Initiate the class with the default constructor and creating the objects.\n     * @param props\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            countries: [],\n            selected: null,\n        };\n\n        // binding functions.\n        this.addCity = this.addCity.bind(this);\n    }\n\n    /**\n     * Default react life function.\n     */\n    componentWillMount() {\n        this._fetchCountries()\n    }\n\n    /**\n     * Fetching the countries list.\n     * @private\n     */\n    _fetchCountries() {\n        CountriesList()\n            .then(response => {\n                const { data = [] } = response;\n                if (data.length > 0) {\n                    this.setState({ countries: data});\n                }\n            })\n            .catch(error => {\n                if (error.response) {\n                    if (!error.response.data.auth) {\n                        this.props.history.push(\"/\");\n                    }\n                }\n            });\n    }\n\n    /**\n     * @param countries\n     * @return {*}\n     * @private\n     */\n    _renderSelectBox(countries = []) {\n        return <AutoComplete\n            suggestions={countries}\n            addCity={this.addCity}\n        />\n    }\n\n    /**\n     * Start the add new location process.\n     * @param suggestion\n     */\n    addCity(suggestion = []) {\n        this.setState({ selected: suggestion });\n    }\n\n    /**\n     * Render the save button if there's some city selected.\n     *\n     * @param selected\n     * @return {Array|*}\n     * @private\n     */\n    static _renderSaveButton(selected = null) {\n        if (selected) {\n            return (\n                <div>\n                    {selected.capital}\n                    <div className={'save-city-button'}>\n                        <button\n                            type={'submit'}\n                        >\n                            SAVE\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n\n        return [];\n    }\n\n    /**\n     * Send the data to api.\n     *\n     * @param event\n     * @private\n     */\n    _submitForm(event) {\n        event.preventDefault();\n        const { selected = null } = this.state;\n\n        if (selected) {\n            AddLocation(selected)\n                .then(response => {\n                    const { data = false } = response;\n\n                    if (data) this.props.history.push(\"/home\");\n                })\n                .catch(error => {\n                    if (error.response) {\n                        if (!error.response.data.auth) {\n                            this.props.history.push(\"/\");\n                        }\n                    }\n                });\n        }\n    }\n\n    /**\n     * Default render function.\n     *\n     * @return {*}\n     */\n    render() {\n        const { countries = [], selected = [] } = this.state;\n\n        if (countries.length === 0) {\n            return  (\n                <div>\n                    Loading the view...\n                </div>\n            );\n        }\n\n        return (\n            <div\n                className={\"add-page-container\"}\n            >\n                <div\n                    className={'back-button'}\n                >\n                    <NavLink\n                        to={\"/home\"}\n                    >\n                        <FontAwesomeIcon icon={faChevronLeft} />\n                    </NavLink>\n                </div>\n                <form\n                    onSubmit={(e) => this._submitForm(e)}\n                    className={'form-container'}\n                >\n                    {this._renderSelectBox(countries)}\n                    {Add._renderSaveButton(selected)}\n                </form>\n            </div>\n        );\n    }\n}","import Request from '../../utils/Request';\n\n/**\n * Getting the countries / capitols list.\n * @return {Promise<AxiosResponse<T>>}\n */\nexport default () => Request.get(`countries`);","import React from 'react';\n\n// importing the react router components.\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// importing all pages component.\nimport Pages from '../pages/AllPages';\n\n/**\n * Mounting dynamically all the routes.\n *\n * @return {*[]}\n */\nfunction makeRoutes() {\n    const paths = {\n        \"/\": Pages.User.Login,\n        \"/login\": Pages.User.Login,\n        \"/logout\": Pages.User.Logout,\n        \"/home\": Pages.User.Home,\n        \"/info/:city/:country\": Pages.Location.Info,\n        \"/add-location\": Pages.Location.Add,\n    };\n\n    return Object.keys(paths).map(path => {\n        return (\n            <Route\n                exact\n                key={path}\n                path={path}\n                component={paths[path]}\n            />\n        );\n    });\n}\n\nexport default class Routes extends React.Component {\n\n    render() {\n        return (\n            <div id=\"wrapper\">\n                <Router\n                    basename={\"#\"}\n                    ref=\"route\"\n                >\n                    <Switch>\n                        {makeRoutes()}\n                        <Route component={Pages.NotFound} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// importing the styles\nimport './styles/main.scss';\n\n// importing the components.\nimport Routes from \"./utils/Routes\";\n\nfunction App() {\n  return (\n      <Routes />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}